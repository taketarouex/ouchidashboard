// Code generated by MockGen. DO NOT EDIT.
// Source: collector.go

// Package ouchidashboard is a generated GoMock package.
package ouchidashboard

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCollector is a mock of Collector interface
type MockCollector struct {
	ctrl     *gomock.Controller
	recorder *MockCollectorMockRecorder
}

// MockCollectorMockRecorder is the mock recorder for MockCollector
type MockCollectorMockRecorder struct {
	mock *MockCollector
}

// NewMockCollector creates a new mock instance
func NewMockCollector(ctrl *gomock.Controller) *MockCollector {
	mock := &MockCollector{ctrl: ctrl}
	mock.recorder = &MockCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCollector) EXPECT() *MockCollectorMockRecorder {
	return m.recorder
}

// CollectLog mocks base method
func (m *MockCollector) CollectLog() (CollectedLog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CollectLog")
	ret0, _ := ret[0].(CollectedLog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CollectLog indicates an expected call of CollectLog
func (mr *MockCollectorMockRecorder) CollectLog() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CollectLog", reflect.TypeOf((*MockCollector)(nil).CollectLog))
}
